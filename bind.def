include: tox/tox.h
include: customTypedefs.h
includeDir: ./
link:    toxcore

beginCallback:

void (*cb_self_connection_status)       (Tox *, TOX_CONNECTION,                                                       void *);
void (*cb_tox_friend_name)              (Tox *, uint32_t, const uint8_t * |:3|, size_t,                               void *);
void (*cb_tox_friend_status_message)    (Tox *, uint32_t, const uint8_t * |:3|, size_t,                               void *);
void (*cb_tox_friend_status)            (Tox *, uint32_t, TOX_USER_STATUS,                                            void *);
void (*cb_tox_friend_connection_status) (Tox *, uint32_t, TOX_CONNECTION,                                             void *);
void (*cb_tox_friend_typing)            (Tox *, uint32_t, bool,                                                       void *);
void (*cb_tox_friend_read_receipt)      (Tox *, uint32_t, uint32_t,                                                   void *);
void (*cb_tox_friend_request)           (Tox *, const uint8_t *, const uint8_t * |:3|, size_t,                        void *);
void (*cb_tox_friend_message)           (Tox *, uint32_t, TOX_MESSAGE_TYPE, const uint8_t * |:4|, size_t,             void *);
void (*cb_tox_file_recv_control)        (Tox *, uint32_t, uint32_t, TOX_FILE_CONTROL,                                 void *);
void (*cb_tox_file_chunk_request)       (Tox *, uint32_t, uint32_t, uint64_t, size_t,                                 void *);
void (*cb_tox_file_recv)                (Tox *, uint32_t, uint32_t, uint32_t, uint64_t, const uint8_t * |:6|, size_t, void *);
void (*cb_tox_file_recv_chunk)          (Tox *, uint32_t, uint32_t, uint64_t, const uint8_t * |:5|, size_t,           void *);
void (*cb_tox_friend_lossy_packet)      (Tox *, uint32_t, const uint8_t * |:3|, size_t,                               void *);
void (*cb_tox_friend_lossless_packet)   (Tox *, uint32_t, const uint8_t * |:3|, size_t,                               void *);

beginBinding:

void tox_callback_self_connection_status   (Tox *, cb_self_connection_status       |FPTR|, void *);
void tox_callback_friend_name              (Tox *, cb_tox_friend_name              |FPTR|, void *);
void tox_callback_friend_status_message    (Tox *, cb_tox_friend_status_message    |FPTR|, void *);
void tox_callback_friend_status            (Tox *, cb_tox_friend_status            |FPTR|, void *);
void tox_callback_friend_connection_status (Tox *, cb_tox_friend_connection_status |FPTR|, void *);
void tox_callback_friend_typing            (Tox *, cb_tox_friend_typing            |FPTR|, void *);
void tox_callback_friend_read_receipt      (Tox *, cb_tox_friend_read_receipt      |FPTR|, void *);
void tox_callback_friend_request           (Tox *, cb_tox_friend_request           |FPTR|, void *);
void tox_callback_friend_message           (Tox *, cb_tox_friend_message           |FPTR|, void *);
void tox_callback_file_recv_control        (Tox *, cb_tox_file_recv_control        |FPTR|, void *);
void tox_callback_file_chunk_request       (Tox *, cb_tox_file_chunk_request       |FPTR|, void *);
void tox_callback_file_recv                (Tox *, cb_tox_file_recv                |FPTR|, void *);
void tox_callback_file_recv_chunk          (Tox *, cb_tox_file_recv_chunk          |FPTR|, void *);
void tox_callback_friend_lossy_packet      (Tox *, cb_tox_friend_lossy_packet      |FPTR|, void *);
void tox_callback_friend_lossless_packet   (Tox *, cb_tox_friend_lossless_packet   |FPTR|, void *);

uint32_t tox_version_major();
uint32_t tox_version_minor();
uint32_t tox_version_patch();
bool     tox_version_is_compatible(uint32_t, uint32_t, uint32_t);

void                tox_options_default(struct Tox_Options *);
struct Tox_Options *tox_options_new(TOX_ERR_OPTIONS_NEW * |out|);
void                tox_options_free(struct Tox_Options *);

Tox *tox_new(const struct Tox_Options *, TOX_ERR_NEW * |out|);
void tox_kill(Tox *);

size_t tox_get_savedata_size(const Tox *);
void   tox_get_savedata(const Tox *, uint8_t * |out :3|, size_t |DUMMY|);

bool tox_bootstrap(     Tox *, const char * |in :6|, uint16_t, const uint8_t * |in :7|, TOX_ERR_BOOTSTRAP * |out|, size_t |DUMMY|, size_t |DUMMY| );
bool tox_add_tcp_relay( Tox *, const char * |in :6|, uint16_t, const uint8_t * |in :7|, TOX_ERR_BOOTSTRAP * |out|, size_t |DUMMY|, size_t |DUMMY| );

TOX_CONNECTION tox_self_get_connection_status(const Tox *);

uint32_t tox_iteration_interval(const Tox *);
void     tox_iterate(Tox *);

void tox_self_get_address(    const Tox *, uint8_t * |out :3|, size_t |DUMMY|);
void tox_self_get_public_key( const Tox *, uint8_t * |out :3|, size_t |DUMMY|);
void tox_self_get_secret_key( const Tox *, uint8_t * |out :3|, size_t |DUMMY|);

void     tox_self_set_nospam(Tox *, uint32_t);
uint32_t tox_self_get_nospam(const Tox *);


bool   tox_self_set_name(           Tox *, const uint8_t * |in :3|, size_t, TOX_ERR_SET_INFO * |out| );
bool   tox_self_set_status_message( Tox *, const uint8_t * |in :3|, size_t, TOX_ERR_SET_INFO * |out| );

size_t tox_self_get_name_size( const Tox * );
void   tox_self_get_name(      const Tox *, uint8_t * |out :3|, size_t |DUMMY| );

size_t tox_self_get_status_message_size( const Tox * );
void   tox_self_get_status_message(      const Tox *, uint8_t * |out :3|, size_t |DUMMY| );

void            tox_self_set_status( Tox *, TOX_USER_STATUS );
TOX_USER_STATUS tox_self_get_status( const Tox * );


uint32_t tox_friend_add( Tox *, const uint8_t * |in :6|, const uint8_t * |in :4|, size_t, TOX_ERR_FRIEND_ADD * |out|, size_t |DUMMY| );
uint32_t tox_friend_add_norequest( Tox *, const uint8_t * |in :4|, TOX_ERR_FRIEND_ADD * |out|, size_t |DUMMY| );
bool     tox_friend_delete( Tox *, uint32_t, TOX_ERR_FRIEND_DELETE * |out| );

uint32_t tox_friend_by_public_key(const Tox *, const uint8_t * |in :4|, TOX_ERR_FRIEND_BY_PUBLIC_KEY * |out|, size_t |DUMMY| );
bool     tox_friend_exists( const Tox *, uint32_t );
size_t   tox_self_get_friend_list_size( const Tox * );
void     tox_self_get_friend_list( const Tox *, uint32_t * |out :3|, size_t |DUMMY| );

bool     tox_friend_get_public_key(  const Tox *, uint32_t, uint8_t * |in :5|, TOX_ERR_FRIEND_GET_PUBLIC_KEY * |out :5|, size_t |DUMMY| );
uint64_t tox_friend_get_last_online( const Tox *, uint32_t, TOX_ERR_FRIEND_GET_LAST_ONLINE * |out| );

size_t   tox_friend_get_name_size( const Tox *, uint32_t, TOX_ERR_FRIEND_QUERY * |out| );
bool     tox_friend_get_name(      const Tox *, uint32_t, uint8_t * |out :5|, TOX_ERR_FRIEND_QUERY * |out|, size_t |DUMMY| );

size_t   tox_friend_get_status_message_size( const Tox *, uint32_t, TOX_ERR_FRIEND_QUERY * |out|);
bool     tox_friend_get_status_message(      const Tox *, uint32_t, uint8_t * |out :5|, TOX_ERR_FRIEND_QUERY * |out|, size_t |DUMMY| );


TOX_USER_STATUS tox_friend_get_status            ( const Tox *, uint32_t, TOX_ERR_FRIEND_QUERY * |out| );
TOX_CONNECTION  tox_friend_get_connection_status ( const Tox *, uint32_t, TOX_ERR_FRIEND_QUERY * |out| );


bool tox_friend_get_typing( const Tox *, uint32_t, TOX_ERR_FRIEND_QUERY * |out| );
bool tox_self_set_typing( Tox *, uint32_t, bool, TOX_ERR_SET_TYPING * |out| );

uint32_t tox_friend_send_message(Tox *, uint32_t, TOX_MESSAGE_TYPE, const uint8_t * |in :5|, size_t, TOX_ERR_FRIEND_SEND_MESSAGE * |out|);

bool tox_hash(uint8_t * |out :4|, const uint8_t * |in :3|, size_t, size_t |DUMMY|);

bool tox_file_control     (      Tox *, uint32_t, uint32_t, TOX_FILE_CONTROL,  TOX_ERR_FILE_CONTROL * |out|);
bool tox_file_seek        (      Tox *, uint32_t, uint32_t, uint64_t,          TOX_ERR_FILE_SEEK    * |out|);
bool tox_file_get_file_id (const Tox *, uint32_t, uint32_t, uint8_t * |in :6|, TOX_ERR_FILE_GET     * |out|, size_t |DUMMY|);

uint32_t tox_file_send(Tox *, uint32_t, uint32_t, uint64_t, const uint8_t * |in :9|, const uint8_t * |in :7|, size_t, TOX_ERR_FILE_SEND * |out|, size_t |DUMMY|);
bool tox_file_send_chunk(Tox *, uint32_t, uint32_t, uint64_t, const uint8_t * |in :6|, size_t, TOX_ERR_FILE_SEND_CHUNK * |out|);


bool tox_friend_send_lossy_packet   (Tox *, uint32_t, const uint8_t * |in :4|, size_t, TOX_ERR_FRIEND_CUSTOM_PACKET * |out|);
bool tox_friend_send_lossless_packet(Tox *, uint32_t, const uint8_t * |in :4|, size_t, TOX_ERR_FRIEND_CUSTOM_PACKET * |out|);

void     tox_self_get_dht_id(const Tox *, uint8_t * |in :3|, size_t |DUMMY|);
uint16_t tox_self_get_udp_port(const Tox *, TOX_ERR_GET_PORT * |out|);
uint16_t tox_self_get_tcp_port(const Tox *, TOX_ERR_GET_PORT * |out|);
